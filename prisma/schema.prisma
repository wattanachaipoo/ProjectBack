// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  username       String           @unique @db.VarChar(30)
  password       String           @db.VarChar(72)
  email          String?
  reservations   Reservation[]
  checkins       CheckIns[]
  BookingHistory BookingHistory[]

  @@map("users")
}

model Reservation {
  id        Int      @id @default(autoincrement())
  number_of_guests String @db.VarChar(150)
  start_date    DateTime @map("due_date") @db.Date
  end_date    DateTime @map("end_date") @db.Date
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(0)
  rooms       Rooms[]

  @@map("Reservation")
}

//ตารางห้อง
model Rooms {
  id             Int         @id @default(autoincrement())
  reservation    Reservation @relation(fields: [reservation_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  reservation_id Int
  room_type      String
  price          String
  status         String
  chackIn        CheckIns[]
  payments       Payments[]
}

//ตาราง Chack-in
model CheckIns {
  id           Int        @id @default(autoincrement())
  room         Rooms      @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  room_id      Int
  user         User       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id      Int
  chackin_date DateTime
  chackOut     CheckOut[]
}

//ตาราง Chack-out
model CheckOut {
  id            Int        @id @default(autoincrement())
  chackin       CheckIns   @relation(fields: [chackin_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chackin_id    Int
  chackout_date DateTime
  payments      Payments[]
}

//ตารางใบเสร็จ

model Payments {
  id             Int              @id @default(autoincrement())
  chackout       CheckOut         @relation(fields: [chackout_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chackout_id    Int
  room           Rooms            @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  room_id        Int
  amout          String
  payment_date   DateTime
  payment_method String
  BookingHistory BookingHistory[]
}

// ตารางประวัติการจอง
model BookingHistory {
  id          Int      @id @default(autoincrement())
  payments    Payments @relation(fields: [payments_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  payments_id Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int      @map("user_id")
  history     String
}

enum Status {
  PENDING
  DOING
  DONE
}
